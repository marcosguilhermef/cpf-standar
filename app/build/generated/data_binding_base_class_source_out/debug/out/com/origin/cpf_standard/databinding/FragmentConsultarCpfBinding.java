// Generated by view binder compiler. Do not edit!
package com.origin.cpf_standard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.origin.cpf_standard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentConsultarCpfBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextInputLayout CPF;

  @NonNull
  public final Button button;

  @NonNull
  public final TextInputLayout captcha;

  @NonNull
  public final ImageView captchaImage;

  @NonNull
  public final EditText captchaText;

  @NonNull
  public final EditText cpfText;

  @NonNull
  public final TextInputLayout nascimento;

  @NonNull
  public final EditText nascimentoText;

  private FragmentConsultarCpfBinding(@NonNull FrameLayout rootView, @NonNull TextInputLayout CPF,
      @NonNull Button button, @NonNull TextInputLayout captcha, @NonNull ImageView captchaImage,
      @NonNull EditText captchaText, @NonNull EditText cpfText, @NonNull TextInputLayout nascimento,
      @NonNull EditText nascimentoText) {
    this.rootView = rootView;
    this.CPF = CPF;
    this.button = button;
    this.captcha = captcha;
    this.captchaImage = captchaImage;
    this.captchaText = captchaText;
    this.cpfText = cpfText;
    this.nascimento = nascimento;
    this.nascimentoText = nascimentoText;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentConsultarCpfBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentConsultarCpfBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_consultar_cpf, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentConsultarCpfBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CPF;
      TextInputLayout CPF = ViewBindings.findChildViewById(rootView, id);
      if (CPF == null) {
        break missingId;
      }

      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.captcha;
      TextInputLayout captcha = ViewBindings.findChildViewById(rootView, id);
      if (captcha == null) {
        break missingId;
      }

      id = R.id.captcha_image;
      ImageView captchaImage = ViewBindings.findChildViewById(rootView, id);
      if (captchaImage == null) {
        break missingId;
      }

      id = R.id.captchaText;
      EditText captchaText = ViewBindings.findChildViewById(rootView, id);
      if (captchaText == null) {
        break missingId;
      }

      id = R.id.cpfText;
      EditText cpfText = ViewBindings.findChildViewById(rootView, id);
      if (cpfText == null) {
        break missingId;
      }

      id = R.id.nascimento;
      TextInputLayout nascimento = ViewBindings.findChildViewById(rootView, id);
      if (nascimento == null) {
        break missingId;
      }

      id = R.id.nascimentoText;
      EditText nascimentoText = ViewBindings.findChildViewById(rootView, id);
      if (nascimentoText == null) {
        break missingId;
      }

      return new FragmentConsultarCpfBinding((FrameLayout) rootView, CPF, button, captcha,
          captchaImage, captchaText, cpfText, nascimento, nascimentoText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
