// Generated by view binder compiler. Do not edit!
package com.origin.cpf_standard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.origin.cpf_standard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FragmentBoaVistaBinding consultarBoaVista;

  @NonNull
  public final ConsultarCpfBinding consultarCpf;

  @NonNull
  public final ConsultarHistoricoBinding consultarHistorico;

  @NonNull
  public final ConsultarScoreSerasaBinding consultarScoreSerasa;

  private FragmentHomeBinding(@NonNull FrameLayout rootView,
      @NonNull FragmentBoaVistaBinding consultarBoaVista, @NonNull ConsultarCpfBinding consultarCpf,
      @NonNull ConsultarHistoricoBinding consultarHistorico,
      @NonNull ConsultarScoreSerasaBinding consultarScoreSerasa) {
    this.rootView = rootView;
    this.consultarBoaVista = consultarBoaVista;
    this.consultarCpf = consultarCpf;
    this.consultarHistorico = consultarHistorico;
    this.consultarScoreSerasa = consultarScoreSerasa;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.consultar_boa_vista;
      View consultarBoaVista = ViewBindings.findChildViewById(rootView, id);
      if (consultarBoaVista == null) {
        break missingId;
      }
      FragmentBoaVistaBinding binding_consultarBoaVista = FragmentBoaVistaBinding.bind(consultarBoaVista);

      id = R.id.consultar_cpf;
      View consultarCpf = ViewBindings.findChildViewById(rootView, id);
      if (consultarCpf == null) {
        break missingId;
      }
      ConsultarCpfBinding binding_consultarCpf = ConsultarCpfBinding.bind(consultarCpf);

      id = R.id.consultar_historico;
      View consultarHistorico = ViewBindings.findChildViewById(rootView, id);
      if (consultarHistorico == null) {
        break missingId;
      }
      ConsultarHistoricoBinding binding_consultarHistorico = ConsultarHistoricoBinding.bind(consultarHistorico);

      id = R.id.consultar_score_serasa;
      View consultarScoreSerasa = ViewBindings.findChildViewById(rootView, id);
      if (consultarScoreSerasa == null) {
        break missingId;
      }
      ConsultarScoreSerasaBinding binding_consultarScoreSerasa = ConsultarScoreSerasaBinding.bind(consultarScoreSerasa);

      return new FragmentHomeBinding((FrameLayout) rootView, binding_consultarBoaVista,
          binding_consultarCpf, binding_consultarHistorico, binding_consultarScoreSerasa);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
